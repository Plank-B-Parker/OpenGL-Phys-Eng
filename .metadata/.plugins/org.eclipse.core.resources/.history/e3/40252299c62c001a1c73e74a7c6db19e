package Graphics;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL13;
import org.lwjgl.opengl.GL20;
import org.lwjgl.opengl.GL30;

import Objects.Mesh;
import Objects.Object;
import Shaders.StaticShader;

public class objectRenderer extends Renderer{
	private StaticShader shader = new StaticShader();
	private Camera camera;
	private ArrayList<lightSource> lightSources;
	
	public objectRenderer(Camera camera, ArrayList<lightSource> lightSources) {
		this.lightSources = lightSources;
		this.camera = camera;
	}
	
	public void renderObject(Mesh mesh, HashMap<Integer, List<Object>> tex_Objects) {
		GL30.glBindVertexArray(mesh.getVaoID());
		GL20.glEnableVertexAttribArray(0);
		GL20.glEnableVertexAttribArray(1);
		//Remember to initialise these.
		GL20.glEnableVertexAttribArray(2);
		GL20.glEnableVertexAttribArray(3);
		
		for(int texID: tex_Objects.keySet()) {
			GL13.glActiveTexture(GL13.GL_TEXTURE0);
			GL11.glBindTexture(GL11.GL_TEXTURE_2D, texID);
			for(Object obj: tex_Objects.get(texID)) {
				//Do Object specific preparations.
				GL11.glDrawElements(GL11.GL_TRIANGLES, mesh.getVertexCount(), GL11.GL_UNSIGNED_INT, 0);
			}
		}
		GL20.glDisableVertexAttribArray(0);
		GL20.glDisableVertexAttribArray(1);
		GL20.glDisableVertexAttribArray(2);
		GL20.glDisableVertexAttribArray(3);
		
		GL30.glBindVertexArray(0);
	}
}
